services:
  proxy:
    image: traefik
    container_name: traefik
    depends_on:
      - authelia
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${MY_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${MY_DOMAIN}"
    volumes:
      - "../data/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${MY_DOMAIN}`)'
      - 'traefik.http.routers.api.entryPoints=websecure'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.routers.api.middlewares=authelia@docker'
    ports:
      - "443:443"
      - "80:80"
    environment:
      DUCKDNS_TOKEN: "${DUCKDNS_TOKEN}"

  authelia_redis:
    image: redis
    restart: unless-stopped
    container_name: authelia_redis

  authelia_generate_secrets:
    build: generate_secrets
    volumes:
      - ../data/authelia/secrets:/secrets

  authelia:
    image: authelia/authelia
    container_name: authelia
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.${MY_DOMAIN}`)'
      - 'traefik.http.routers.authelia.entryPoints=websecure'
      - 'traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/authz/forward-auth'
      - 'traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Email,Remote-Name'
    depends_on:
      authelia_generate_secrets:
        condition: service_completed_successfully
    volumes:
      - ../data/authelia:/config
    restart: unless-stopped
    expose:
      - 9091
    environment:
      TZ: Asia/Kolkata
      X_AUTHELIA_CONFIG_FILTERS: template
      MY_DOMAIN: ${MY_DOMAIN}
      AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE: /config/secrets/JWT_SECRET
      AUTHELIA_SESSION_SECRET_FILE: /config/secrets/SESSION_SECRET
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /config/secrets/STORAGE_ENCRYPTION_KEY

  pgbackweb_postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: pgbackweb
      POSTGRES_PASSWORD: password
    volumes:
      - ../data/pgbackweb_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgbackweb:
    image: eduardolat/pgbackweb:latest
    volumes:
      - ../data/pgbackweb_backups:/backups # Mounting the backup dir
    environment:
      PBW_ENCRYPTION_KEY: "fPLOhZupFq+S8Rt2SmcF7wQD2TkyeL4VwiThWO0JR0U="
      PBW_POSTGRES_CONN_STRING: "postgresql://postgres:password@pgbackweb_postgres:5432/pgbackweb?sslmode=disable"
      TZ: "Asia/Kolkata"
    depends_on:
      pgbackweb_postgres:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pgbackweb.rule=Host(`pgbackweb.${MY_DOMAIN}`)'
      - 'traefik.http.routers.pgbackweb.entryPoints=websecure'
